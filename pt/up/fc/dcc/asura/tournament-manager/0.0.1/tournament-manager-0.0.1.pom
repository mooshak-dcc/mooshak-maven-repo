<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>pt.up.fc.dcc.asura</groupId>
    <artifactId>tournament-manager</artifactId>
    <version>0.0.1</version>
    <packaging>jar</packaging>
    <name>Asura Tournament Manager</name>
    <description>Asura Tournament Manager is responsible for managing and running tournaments. A tournament can have any
        number of stages, each with its own type (pools or knockout) and format (e.g., round-robin, swiss type,
        knockout, double knockout, among others). Stages are populated with a set of players, those who qualified in the
        previous stage, which will compose the matches of every round of the current stage. The assignment of players to
        matches is a task of this component.
    </description>

    <licenses>
        <license>
            <name>Artistic License 2.0</name>
            <url>https://opensource.org/licenses/Artistic-2.0</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>jcpaiva</id>
            <name>José Carlos Paiva</name>
            <email>josepaiva94@gmail.com</email>
            <url>http://www.josecpaiva.me</url>
        </developer>
        <developer>
            <id>zp</id>
            <name>José Paulo Leal</name>
            <email>zp@dcc.fc.up.pt</email>
            <url>http://www.dcc.fc.up.pt/~zp</url>
        </developer>
    </developers>

    <properties>
        <target.jdk>1.8</target.jdk>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- dependencies -->
        <junit.version>5.2.0</junit.version>
        <javax.json-api.version>1.1.2</javax.json-api.version>

        <!-- plugins -->
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <site-maven-plugin.version>0.12</site-maven-plugin.version>

        <!-- deployment authentication -->
        <github.global.server>github</github.global.server>

    </properties>

    <dependencies>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JSON data -->
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>${javax.json-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>${javax.json-api.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${target.jdk}</source>
                    <target>${target.jdk}</target>
                </configuration>
            </plugin>

            <!-- Deploy JAR -->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mooshak-maven-repo</altDeploymentRepository>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>${site-maven-plugin.version}</version>
                <configuration>
                    <message>Maven artifacts for ${project.name} (${project.groupId}.${project.artifactId}-${project.version})</message>
                    <noJekyll>true</noJekyll>
                    <outputDirectory>${project.build.directory}/mooshak-maven-repo</outputDirectory>
                    <branch>refs/heads/${project.artifactId}-${project.version}</branch>
                    <includes><include>**/*</include></includes>
                    <repositoryName>mooshak-maven-repo</repositoryName>
                    <repositoryOwner>mooshak-dcc</repositoryOwner>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>